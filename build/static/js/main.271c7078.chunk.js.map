{"version":3,"sources":["store/ActionTypes.js","store/Reducer.js","store/Actions.js","store/Sagas.js","store/ConfigureStore.js","components/Sidebar/Sidebar.jsx","layouts/Main/Main.jsx","components/Navbars/AdminNavbar.jsx","components/Footer/Footer.jsx","components/FixedPlugin/FixedPlugin.jsx","views/Exercise.jsx","views/SlotMachine.jsx","routes.js","index.js"],"names":["SLOT_MACHINE_START","SLOT_MACHINE_STOP","computeNewPosition","position","w1","Math","floor","random","w2","w3","INITIAL_STATE","mSeconds","isRunning","prize","classes","darkMode","activeColor","sidebarMini","opacity","sidebarOpened","slotMachineMini","allReducer","state","arguments","length","undefined","action","type","Object","objectSpread","color","types","computeThePrize","mainActions","changeBgColor","changeSideBarColor","toggleSideBar","toggleFixedPlugin","toggleMachineSize","slotMachineActions","start","tick","stop","startSaga","stopSaga","root","FIFTY_MS","FIVE_SEG","TEN_SEG","wait","ms","Promise","resolve","setTimeout","channel","timeCount","_ref","stopped","regenerator_default","a","wrap","_context","prev","next","actionChannel","sent","take","race","call","put","actions","abrupt","_marked","_ref2","started","_context2","tick5s","_marked2","_context3","all","fork","_marked3","sagaMiddleware","createSagaMiddleware","ps","AdminNavbar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","updateColor","window","innerWidth","collapseOpen","setState","toggleCollapse","toggleModalSearch","modalSearch","addEventListener","removeEventListener","_this2","react_default","createElement","Fragment","Navbar","className","classNames","defineProperty","location","pathname","indexOf","expand","Container","fluid","Button","id","onClick","document","body","classList","toggle","UncontrolledTooltip","delay","target","placement","toggled","documentElement","NavbarBrand","href","e","preventDefault","brandText","data-toggle","data-target","aria-expanded","aria-label","Collapse","navbar","isOpen","Nav","InputGroup","tag","UncontrolledDropdown","nav","DropdownToggle","caret","alt","src","DropdownMenu","right","NavLink","DropdownItem","Modal","modalClassName","Input","placeholder","data-dismiss","React","Component","connect","ownProps","dispatch","bindActionCreators","actionCreators","Footer","default","Date","getFullYear","Sidebar","getCollapseStates","routes","initialState","map","prop","key","collapse","getCollapseInitialState","views","createLinks","rtlActive","redirect","st","icon","rtlName","name","rtlMini","mini","activeRoute","layout","path","es_NavLink","to","activeClassName","closeSidebar","routeName","i","navigator","platform","PerfectScrollbar","refs","sidebar","destroy","_this$props","logo","logoImg","logoText","outterLink","imgSrc","text","innerLink","data","ref","data-color","js_default","onChange","value","onText","offText","Exercise","Card","CardHeader","CardTitle","CardBody","PlayWinningSound","autoplay","preload","Wheel","style","backgroundImage","backgroundPosition","height","component","playWinningInfo","Badge","concat","SlotMachine_PlayWinningSound","Row","CardGroup","SlotMachine_Wheel","CardFooter","disabled","Main","showNavbarButton","scrollTop","scrollingElement","mainPanel","getRoutes","Route","getActiveRoute","collapseActiveRoute","remove","tables","querySelectorAll","add","history","handleMiniClick","components_Sidebar_Sidebar","assign","Navbars_AdminNavbar","Switch","components_Footer_Footer","components_FixedPlugin_FixedPlugin","createBrowserHistory","basename","process","store","middleware","thunk","routerMiddleware","enhancers","rootReducer","combineReducers","router","connectRouter","createStore","compose","apply","applyMiddleware","run","allSaga","configureStore","initialReduxState","ReactDOM","render","es","esm","BrowserRouter","layouts_Main_Main","Redirect","from","getElementById"],"mappings":"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","file":"static/js/main.271c7078.chunk.js","sourcesContent":["export const CHANGE_BACKGROUND_COLOR = \"CHANGE_BACKGROUND_COLOR\";\r\nexport const CHANGE_SIDE_BAR_COLOR = \"CHANGE_SIDE_BAR_COLOR\";\r\nexport const TOGGLE_SIDE_BAR = \"TOGGLE_SIDE_BAR\";\r\nexport const TOGGLE_FIXED_PLUGIN = \"TOGGLE_FIXED_PLUGIN\";\r\nexport const TOGGLE_SLOT_MACHINE_SIZE = \"TOGGLE_SLOT_MACHINE_SIZE\";\r\n\r\nexport const SLOT_MACHINE_START = \"SLOT_MACHINE_START\";\r\nexport const SLOT_MACHINE_TICKET = \"SLOT_MACHINE_TICKET\";\r\nexport const SLOT_MACHINE_STOP = \"SLOT_MACHINE_STOP\";\r\n","import * as types from \"./ActionTypes\";\r\n\r\nexport const computeNewPosition = position => {\r\n  let w1 = position.w1 + Math.floor(Math.random() * 2 + 1);\r\n  let w2 = position.w2 + Math.floor(Math.random() * 2 + 1);\r\n  let w3 = position.w3 + Math.floor(Math.random() * 2 + 1);\r\n  return { w1, w2, w3 };\r\n};\r\n\r\nconst computeThePrize = position => {\r\n  let w1 = position.w1 % 4;\r\n  let w2 = position.w2 % 4;\r\n  let w3 = position.w3 % 4;\r\n\r\n  if (w1 === w2 && w1 === w3) {\r\n    return 1000;\r\n  } else if (w1 === w2 || w2 === w3) {\r\n    return 20;\r\n  } else if (w1 === w3) {\r\n    return 10;\r\n  }\r\n  return 0;\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n  //slot machine\r\n  mSeconds: 0,\r\n  isRunning: false,\r\n  prize: 0,\r\n  position: computeNewPosition({\r\n    w1: 0,\r\n    w2: 0,\r\n    w3: 0\r\n  }),\r\n\r\n  //main (Main, SideBars, FixedPuglin)\r\n  classes: \"dropdown\",\r\n  darkMode: true,\r\n  activeColor: \"blue\",\r\n  sidebarMini: true,\r\n  opacity: 0,\r\n  sidebarOpened: false,\r\n  slotMachineMini: true\r\n};\r\n\r\nconst allReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case types.CHANGE_BACKGROUND_COLOR:\r\n      return { ...state, darkMode: !state.darkMode };\r\n    case types.CHANGE_SIDE_BAR_COLOR:\r\n      return { ...state, activeColor: action.color };\r\n    case types.TOGGLE_FIXED_PLUGIN:\r\n      let classes = \"dropdown\";\r\n      if (state.classes === \"dropdown\") {\r\n        classes = \"dropdown show\";\r\n      }\r\n      return { ...state, classes };\r\n    case types.TOGGLE_SIDE_BAR:\r\n      return { ...state, sidebarMini: !state.sidebarMini };\r\n    case types.TOGGLE_SLOT_MACHINE_SIZE:\r\n      return { ...state, slotMachineMini: !state.slotMachineMini };\r\n    case types.SLOT_MACHINE_START:\r\n      return { ...state, mSeconds: action.mSeconds, isRunning: true, prize: 0 };\r\n    case types.SLOT_MACHINE_TICKET:\r\n      let position = computeNewPosition(state.position);\r\n      return { ...state, mSeconds: action.mSeconds, position };\r\n    case types.SLOT_MACHINE_STOP:\r\n      let prize = computeThePrize(state.position);\r\n      return { ...state, mSeconds: action.mSeconds, isRunning: false, prize };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default allReducer;\r\n","import * as types from \"./ActionTypes\";\r\n\r\nexport const mainActions = {\r\n  changeBgColor: () => ({ type: types.CHANGE_BACKGROUND_COLOR }),\r\n  changeSideBarColor: color => ({ type: types.CHANGE_SIDE_BAR_COLOR, color }),\r\n\r\n  toggleSideBar: () => ({ type: types.TOGGLE_SIDE_BAR }),\r\n  toggleFixedPlugin: () => ({ type: types.TOGGLE_FIXED_PLUGIN }),\r\n  toggleMachineSize: () => ({ type: types.TOGGLE_SLOT_MACHINE_SIZE })\r\n};\r\n\r\nexport const slotMachineActions = {\r\n  start: mSeconds => ({ type: types.SLOT_MACHINE_START, mSeconds }),\r\n  tick: mSeconds => ({ type: types.SLOT_MACHINE_TICKET, mSeconds }),\r\n  stop: mSeconds => ({ type: types.SLOT_MACHINE_STOP, mSeconds })\r\n};\r\n","import { actionChannel, call, take, put, race, all, fork } from \"redux-saga/effects\";\r\nimport * as types from \"./ActionTypes\";\r\nimport { slotMachineActions as actions } from \"./Actions\";\r\n\r\nconst FIFTY_MS = 50;\r\nconst FIVE_SEG = 5 * FIFTY_MS * 20;\r\nconst TEN_SEG = 2 * FIVE_SEG;\r\n\r\n// wait :: Number -> Promise\r\nconst wait = ms =>\r\n  new Promise(resolve => {\r\n    setTimeout(() => resolve(ms), ms);\r\n  });\r\n\r\nfunction* startSaga() {\r\n  const channel = yield actionChannel(types.SLOT_MACHINE_START);\r\n\r\n  let timeCount = 0;\r\n  while (yield take(channel)) {\r\n    while (true) {\r\n      const { stopped, tick } = yield race({\r\n        stopped: take(types.SLOT_MACHINE_STOP),\r\n        tick: call(wait, FIFTY_MS)\r\n      });\r\n\r\n      if (!stopped && timeCount < TEN_SEG) {\r\n        timeCount += FIFTY_MS;\r\n        //console.log(timeCount);\r\n        yield put(actions.tick(timeCount));\r\n      } else if (timeCount >= TEN_SEG) {\r\n        yield put(actions.stop(timeCount));\r\n        timeCount = 0;\r\n        break;\r\n      } else {\r\n        timeCount = 0;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction* stopSaga() {\r\n  const channel = yield actionChannel(types.SLOT_MACHINE_STOP);\r\n\r\n  while (yield take(channel)) {\r\n    while (true) {\r\n      const { started, tick5s } = yield race({\r\n        started: take(types.SLOT_MACHINE_START),\r\n        tick5s: call(wait, FIVE_SEG)\r\n      });\r\n\r\n      if (!started) {\r\n        yield put(actions.start(0));\r\n        break;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default function* root() {\r\n  yield all([fork(startSaga), fork(stopSaga)]);\r\n}\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\r\nimport allReducer from \"./Reducer\";\r\nimport allSaga from \"./Sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport default function configureStore(history, initialState) {\r\n  const middleware = [thunk, sagaMiddleware, routerMiddleware(history)];\r\n\r\n  // In development, use the browser's Redux dev tools extension if installed\r\n  const enhancers = [];\r\n  const isDevelopment = process.env.NODE_ENV === \"development\";\r\n  if (isDevelopment && typeof window !== \"undefined\" && window.__REDUX_DEVTOOLS_EXTENSION__) {\r\n    enhancers.push(window.devToolsExtension());\r\n  }\r\n  const rootReducer = combineReducers({\r\n    allReducer,\r\n    router: connectRouter(history)\r\n  });\r\n\r\n  let store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ...enhancers\r\n    )\r\n  );\r\n\r\n  sagaMiddleware.run(allSaga);\r\n\r\n  return store;\r\n}\r\n","/*eslint-disable*/\nimport React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { mainActions as actionCreators } from \"store/Actions\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav, Collapse } from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getCollapseStates(props.routes);\n  }\n  // this creates the intial state of this component based on the collapse routes\n  // that it gets through this.props.routes\n  getCollapseStates = routes => {\n    let initialState = {};\n    routes.map((prop, key) => {\n      if (prop.collapse) {\n        initialState = {\n          [prop.state]: this.getCollapseInitialState(prop.views),\n          ...this.getCollapseStates(prop.views),\n          ...initialState\n        };\n      }\n      return null;\n    });\n    return initialState;\n  };\n  // this verifies if any of the collapses should be default opened on a rerender of this component\n  // for example, on the refresh of the page,\n  // while on the src/views/forms/RegularForms.jsx - route /admin/regular-forms\n  getCollapseInitialState(routes) {\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse && this.getCollapseInitialState(routes[i].views)) {\n        return true;\n      } else if (window.location.href.indexOf(routes[i].path) !== -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n  // this function creates the links and collapses that appear in the sidebar (left menu)\n  createLinks = routes => {\n    const { rtlActive } = this.props;\n    return routes.map((prop, key) => {\n      if (prop.redirect) {\n        return null;\n      }\n      if (prop.collapse) {\n        var st = {};\n        st[prop[\"state\"]] = !this.state[prop.state];\n        return (\n          <li className={this.getCollapseInitialState(prop.views) ? \"active\" : \"\"} key={key}>\n            <a\n              href=\"#pablo\"\n              data-toggle=\"collapse\"\n              aria-expanded={this.state[prop.state]}\n              onClick={e => {\n                e.preventDefault();\n                this.setState(st);\n              }}\n            >\n              {prop.icon !== undefined ? (\n                <>\n                  <i className={prop.icon} />\n                  <p>\n                    {rtlActive ? prop.rtlName : prop.name}\n                    <b className=\"caret\" />\n                  </p>\n                </>\n              ) : (\n                <>\n                  <span className=\"sidebar-mini-icon\">{rtlActive ? prop.rtlMini : prop.mini}</span>\n                  <span className=\"sidebar-normal\">\n                    {rtlActive ? prop.rtlName : prop.name}\n                    <b className=\"caret\" />\n                  </span>\n                </>\n              )}\n            </a>\n            <Collapse isOpen={this.state[prop.state]}>\n              <ul className=\"nav\">{this.createLinks(prop.views)}</ul>\n            </Collapse>\n          </li>\n        );\n      }\n      return (\n        <li className={this.activeRoute(prop.layout + prop.path)} key={key}>\n          <NavLink to={prop.layout + prop.path} activeClassName=\"\" onClick={this.props.closeSidebar}>\n            {prop.icon !== undefined ? (\n              <>\n                <i className={prop.icon} />\n                <p>{rtlActive ? prop.rtlName : prop.name}</p>\n              </>\n            ) : (\n              <>\n                <span className=\"sidebar-mini-icon\">{rtlActive ? prop.rtlMini : prop.mini}</span>\n                <span className=\"sidebar-normal\">{rtlActive ? prop.rtlName : prop.name}</span>\n              </>\n            )}\n          </NavLink>\n        </li>\n      );\n    });\n  };\n  // verifies if routeName is the one active (in browser input)\n  activeRoute = routeName => {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  };\n  componentDidMount() {\n    // if you are using a Windows Machine, the scrollbars will have a Mac look\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar);\n    }\n  }\n  componentWillUnmount() {\n    // we need to destroy the false scrollbar when we navigate\n    // to a page that doesn't have this component rendered\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  render() {\n    const { activeColor, logo } = this.props;\n    let logoImg = null;\n    let logoText = null;\n    if (logo !== undefined) {\n      if (logo.outterLink !== undefined) {\n        logoImg = (\n          <a href={logo.outterLink} className=\"simple-text logo-mini\" target=\"_blank\">\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </a>\n        );\n        logoText = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-normal\"\n            target=\"_blank\"\n            onClick={this.props.closeSidebar}\n          >\n            {logo.text}\n          </a>\n        );\n      } else {\n        logoImg = (\n          <NavLink to={logo.innerLink} className=\"simple-text logo-mini\" onClick={this.props.closeSidebar}>\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </NavLink>\n        );\n        logoText = (\n          <NavLink to={logo.innerLink} className=\"simple-text logo-normal\" onClick={this.props.closeSidebar}>\n            {logo.text}\n          </NavLink>\n        );\n      }\n    }\n    return (\n      <div className=\"sidebar\" data={activeColor}>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          {logoImg !== null || logoText !== null ? (\n            <div className=\"logo\">\n              {logoImg}\n              {logoText}\n            </div>\n          ) : null}\n          <Nav>{this.createLinks(this.props.routes)}</Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebar.propTypes = {\n  activeColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\", \"orange\", \"red\"]),\n  rtlActive: PropTypes.bool,\n  routes: PropTypes.array.isRequired,\n  logo: PropTypes.oneOfType([\n    PropTypes.shape({\n      innerLink: PropTypes.string.isRequired,\n      imgSrc: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired\n    }),\n    PropTypes.shape({\n      outterLink: PropTypes.string.isRequired,\n      imgSrc: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired\n    })\n  ]),\n  // this is used on responsive to close the sidebar on route navigation\n  closeSidebar: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  activeColor: state.allReducer.activeColor\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actionCreators, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Sidebar);\n","import React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { slotMachineActions as actionCreators } from \"store/Actions\";\nimport { Route, Switch } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\n\nimport routes from \"routes.js\";\n\nvar ps;\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(this.refs.mainPanel);\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    document.body.classList.add(\"sidebar-mini\");\n    window.addEventListener(\"scroll\", this.showNavbarButton);\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.documentElement.className += \" perfect-scrollbar-off\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n    }\n    window.removeEventListener(\"scroll\", this.showNavbarButton);\n  }\n  componentDidUpdate(e) {\n    if (e.location.pathname !== e.history.location.pathname) {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n  showNavbarButton = () => {\n    if (\n      document.documentElement.scrollTop > 50 ||\n      document.scrollingElement.scrollTop > 50 ||\n      this.refs.mainPanel.scrollTop > 50\n    ) {\n      this.setState({ opacity: 1 });\n    } else if (\n      document.documentElement.scrollTop <= 50 ||\n      document.scrollingElement.scrollTop <= 50 ||\n      this.refs.mainPanel.scrollTop <= 50\n    ) {\n      this.setState({ opacity: 0 });\n    }\n  };\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return this.getRoutes(prop.views);\n      }\n      if (prop.layout === \"/main\") {\n        return <Route path={prop.layout + prop.path} component={prop.component} key={key} />;\n      } else {\n        return null;\n      }\n    });\n  };\n  getActiveRoute = routes => {\n    let activeRoute = \"Default Brand Text\";\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse) {\n        let collapseActiveRoute = this.getActiveRoute(routes[i].views);\n        if (collapseActiveRoute !== activeRoute) {\n          return collapseActiveRoute;\n        }\n      } else {\n        if (window.location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n          return routes[i].name;\n        }\n      }\n    }\n    return activeRoute;\n  };\n\n  render() {\n    this.props.stop(0);\n    return (\n      <div className=\"wrapper\">\n        <div className=\"rna-container\"></div>\n        <div className=\"navbar-minimize-fixed\" style={{ opacity: this.state.opacity }}>\n          <button className=\"minimize-sidebar btn btn-link btn-just-icon\" onClick={this.handleMiniClick}>\n            <i className=\"tim-icons icon-align-center visible-on-sidebar-regular text-muted\" />\n            <i className=\"tim-icons icon-bullet-list-67 visible-on-sidebar-mini text-muted\" />\n          </button>\n        </div>\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          logo={{\n            outterLink: \"https://career.luxoft.com/careers/206853/front-end-developer/\",\n            text: \"Front-End Developer\",\n            imgSrc: \"/react-logo.png\"\n          }}\n        />\n        <div className=\"main-panel\" ref=\"mainPanel\" data={this.state.activeColor}>\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getActiveRoute(routes)}\n            sidebarOpened={this.state.sidebarOpened}\n          />\n          <Switch>{this.getRoutes(routes)}</Switch>\n          {// we don't want the Footer to be rendered on full screen maps page\n          this.props.location.pathname.indexOf(\"full-screen-map\") !== -1 ? null : <Footer fluid />}\n        </div>\n        <FixedPlugin />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actionCreators, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Main);\n","import React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { mainActions as actionCreators } from \"store/Actions\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal,\n  UncontrolledTooltip\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapseOpen: false,\n      modalSearch: false,\n      color: \"navbar-transparent\"\n    };\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateColor);\n  }\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  updateColor = () => {\n    if (window.innerWidth < 993 && this.state.collapseOpen) {\n      this.setState({\n        color: \"bg-white\"\n      });\n    } else {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  toggleCollapse = () => {\n    if (this.state.collapseOpen) {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"bg-white\"\n      });\n    }\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // this function is to open the Search modal\n  toggleModalSearch = () => {\n    this.setState({\n      modalSearch: !this.state.modalSearch\n    });\n  };\n  render() {\n    return (\n      <>\n        <Navbar\n          className={classNames(\"navbar-absolute\", {\n            [this.state.color]: this.props.location.pathname.indexOf(\"full-screen-map\") === -1\n          })}\n          expand=\"lg\"\n        >\n          <Container fluid>\n            <div className=\"navbar-wrapper\">\n              <div className=\"navbar-minimize d-inline\">\n                <Button\n                  className=\"minimize-sidebar btn-just-icon\"\n                  color=\"link\"\n                  id=\"tooltip209599\"\n                  onClick={() => {\n                    this.props.toggleSideBar();\n                    document.body.classList.toggle(\"sidebar-mini\");\n                  }}\n                >\n                  <i className=\"tim-icons icon-align-center visible-on-sidebar-regular\" />\n                  <i className=\"tim-icons icon-bullet-list-67 visible-on-sidebar-mini\" />\n                </Button>\n                <UncontrolledTooltip delay={0} target=\"tooltip209599\" placement=\"right\">\n                  Sidebar toggle\n                </UncontrolledTooltip>\n              </div>\n              <div\n                className={classNames(\"navbar-toggle d-inline\", {\n                  toggled: this.props.sidebarOpened\n                })}\n              >\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={() => {\n                    this.props.toggleSideBar();\n                    document.documentElement.classList.toggle(\"nav-open\");\n                  }}\n                >\n                  <span className=\"navbar-toggler-bar bar1\" />\n                  <span className=\"navbar-toggler-bar bar2\" />\n                  <span className=\"navbar-toggler-bar bar3\" />\n                </button>\n              </div>\n              <NavbarBrand href=\"#pablo\" onClick={e => e.preventDefault()}>\n                {this.props.brandText}\n              </NavbarBrand>\n            </div>\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#navigation\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n              onClick={this.toggleCollapse}\n            >\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n            </button>\n            <Collapse navbar isOpen={this.state.collapseOpen}>\n              <Nav className=\"ml-auto\" navbar>\n                <InputGroup className=\"search-bar\" tag=\"li\">\n                  <Button\n                    color=\"link\"\n                    data-target=\"#searchModal\"\n                    data-toggle=\"modal\"\n                    id=\"search-button\"\n                    onClick={this.toggleModalSearch}\n                  >\n                    <i className=\"tim-icons icon-zoom-split\" />\n                    <span className=\"d-lg-none d-md-block\">Search</span>\n                  </Button>\n                </InputGroup>\n                <UncontrolledDropdown nav>\n                  <DropdownToggle caret color=\"default\" data-toggle=\"dropdown\" nav onClick={e => e.preventDefault()}>\n                    <div className=\"photo\">\n                      <img alt=\"...\" src={\"/dunian.jpg\"} />\n                    </div>\n                    <b className=\"caret d-none d-lg-block d-xl-block\" />\n                    <p className=\"d-lg-none\">Log out</p>\n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                    <NavLink tag=\"a\">\n                      <DropdownItem href=\"https://www.linkedin.com/in/duniansampa/\" className=\"nav-item\">\n                        Profile\n                      </DropdownItem>\n                    </NavLink>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <li className=\"separator d-lg-none\" />\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n        <Modal modalClassName=\"modal-search\" isOpen={this.state.modalSearch} toggle={this.toggleModalSearch}>\n          <div className=\"modal-header\">\n            <Input id=\"inlineFormInputGroup\" placeholder=\"SEARCH\" type=\"text\" />\n            <button\n              aria-label=\"Close\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              type=\"button\"\n              onClick={this.toggleModalSearch}\n            >\n              <i className=\"tim-icons icon-simple-remove\" />\n            </button>\n          </div>\n        </Modal>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  sidebarMini: state.allReducer.sidebarMini,\n  sidebarOpened: !state.allReducer.sidebarMini\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actionCreators, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AdminNavbar);\n","/*eslint-disable*/\nimport React from \"react\";\nimport { Container, Row } from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}>\n        <Container fluid={this.props.fluid ? true : false}>\n          <ul className=\"nav\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"https://br.linkedin.com/in/duniansampa\" target=\"_blank\">\n                My LinkedIn\n              </a>\n            </li>{\" \"}\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"https://github.com/duniansampa/\" target=\"_blank\">\n                My GitHub\n              </a>\n            </li>{\" \"}\n          </ul>\n          <div className=\"copyright\">\n            © {new Date().getFullYear()} made with <i className=\"tim-icons icon-heart-2\" /> by{\" \"}\n            <a href=\"https://br.linkedin.com/in/duniansampa\" target=\"_blank\">\n              Dunian Coutinho Sampa\n            </a>{\" \"}\n            to get job.\n          </div>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { mainActions as actionCreators } from \"store/Actions\";\n// react plugin used to create switch buttons\nimport Switch from \"react-bootstrap-switch\";\n\nconst FixedPlugin = ({\n  classes,\n  activeColor,\n  sidebarMini,\n  darkMode,\n  slotMachineMini,\n  changeBgColor,\n  toggleFixedPlugin,\n  toggleSideBar,\n  changeSideBarColor,\n  toggleMachineSize\n}) => {\n  return (\n    <div className=\"fixed-plugin\">\n      <div className={classes}>\n        <a\n          href=\"#pablo\"\n          onClick={e => {\n            e.preventDefault();\n            toggleFixedPlugin();\n          }}\n        >\n          <i className=\"fa fa-cog fa-2x\" />\n        </a>\n        <ul className=\"dropdown-menu show\">\n          <li className=\"header-title\">SIDEBAR BACKGROUND</li>\n          <li className=\"adjustments-line\">\n            <div className=\"badge-colors text-center\">\n              <span\n                className={\n                  activeColor === \"primary\" ? \"badge filter badge-primary active\" : \"badge filter badge-primary\"\n                }\n                data-color=\"primary\"\n                onClick={() => {\n                  changeSideBarColor(\"primary\");\n                }}\n              />\n              <span\n                className={activeColor === \"blue\" ? \"badge filter badge-info active\" : \"badge filter badge-info\"}\n                data-color=\"info\"\n                onClick={() => {\n                  changeSideBarColor(\"blue\");\n                }}\n              />\n              <span\n                className={activeColor === \"green\" ? \"badge filter badge-success active\" : \"badge filter badge-success\"}\n                data-color=\"success\"\n                onClick={() => {\n                  changeSideBarColor(\"green\");\n                }}\n              />\n              <span\n                className={\n                  activeColor === \"orange\" ? \"badge filter badge-warning active\" : \"badge filter badge-warning\"\n                }\n                data-color=\"warning\"\n                onClick={() => {\n                  changeSideBarColor(\"orange\");\n                }}\n              />\n              <span\n                className={activeColor === \"red\" ? \"badge filter badge-danger active\" : \"badge filter badge-danger\"}\n                data-color=\"danger\"\n                onClick={() => {\n                  changeSideBarColor(\"red\");\n                }}\n              />\n            </div>\n          </li>\n          <li className=\"header-title\">SIDEBAR MINI</li>\n          <li className=\"adjustments-line\">\n            <div className=\"togglebutton switch-sidebar-mini\">\n              <span className=\"label-switch\">OFF</span>\n              <Switch\n                onChange={() => {\n                  toggleSideBar();\n                  document.body.classList.toggle(\"sidebar-mini\");\n                }}\n                value={sidebarMini}\n                onText=\"\"\n                offText=\"\"\n              />\n              <span className=\"label-switch\">ON</span>\n            </div>\n          </li>\n          <li className=\"adjustments-line\">\n            <div className=\"togglebutton switch-change-color mt-3\">\n              <span className=\"label-switch\">LIGHT MODE</span>\n              <Switch\n                onChange={() => {\n                  changeBgColor();\n                  document.body.classList.toggle(\"white-content\");\n                }}\n                value={darkMode}\n                onText=\"\"\n                offText=\"\"\n              />\n              <span className=\"label-switch\">DARK MODE</span>\n            </div>\n          </li>\n          <li className=\"header-title\">SLOT MACHINE</li>\n          <li className=\"adjustments-line\">\n            <div className=\"togglebutton switch-change-color mt-3\">\n              <span className=\"label-switch\">BIG</span>\n              <Switch onChange={toggleMachineSize} value={slotMachineMini} onText=\"\" offText=\"\" />\n              <span className=\"label-switch\">SMALL</span>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  activeColor: state.allReducer.activeColor,\n  sidebarMini: state.allReducer.sidebarMini,\n  classes: state.allReducer.classes,\n  darkMode: state.allReducer.darkMode,\n  slotMachineMini: state.allReducer.slotMachineMini\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actionCreators, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FixedPlugin);\n","import React from \"react\";\n// reactstrap components\nimport { Card, CardHeader, CardBody, CardTitle } from \"reactstrap\";\n\nconst Exercise = () => (\n  <>\n    <div className=\"content\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Exercise</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <p>The slot machine (HTML5/Javascript/ReactJS - ReduxSaga if you think that it will be usefull).</p>\n          <p>\n            A slot machine is the machine you can see in many casinos where people insert a coin and then there are\n            three wheels spinning with some fruits or symbols inside. In this case, we cannot enter coins.\n          </p>\n          <p>The behaviour will be as follows:</p>\n          <p>\n            The machine has 3 wheels.Each wheel has 4 symbols (strawberry, banana, orange and a monkey). Do not overdo\n            the design. In our case, the machine can show only one symbol per wheel.{\" \"}\n          </p>\n          <p>\n            The machine starts with the symbols in some random position The machine has a start button. When the user\n            presses it, then the wheels spin (a symbol every, 50ms) If the user doesn’t press start, then the machine\n            does it automatically after 5 seconds If the user doesn’t press stop, the machine stops automatically after\n            10 seconds (after starting) The machine has a stop button. When the user presses it, then the wheels stop.\n            If all the wheels show the two or more symbols of the same type, then we have a prize!!!. Two identical\n            non-consecutive symbols, the prize is 10 dollars, Two consecutive symbols, then the prize is 20 dollars. The\n            same symbol in all the wheels, the prize is 100 dollars\n          </p>\n          <p>\n            Please, come with a reasonable simple design and a solution. It needs to be properly tested. No need of\n            server side. Just HTML5/Javascript Please push the code to your Github repo otherwise you can send the code\n            back attached to the mail.\n          </p>\n        </CardBody>\n      </Card>\n    </div>\n  </>\n);\n\nexport default Exercise;\n","import React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { slotMachineActions as actionCreators } from \"store/Actions\";\n\n// reactstrap components\nimport { Button, Card, CardHeader, CardBody, CardGroup, CardFooter, CardTitle, Row, Badge } from \"reactstrap\";\n\nconst PlayWinningSound = () => (\n  <audio autoplay=\"autoplay\" className=\"player\" preload=\"false\">\n    <source src={\"/winning_slot.wav\"} />\n  </audio>\n);\n\nconst offset = 188;\nconst Wheel = ({ position, slotMachineMini }) => (\n  <div\n    style={{\n      backgroundImage: `url(/slotMachineSymbols.png)`,\n      backgroundPosition: \"0px \" + offset * position + \"px\",\n      height: slotMachineMini ? \"188px\" : \"564px\"\n    }}\n    className={`icons`}\n  />\n);\n\nconst SlotMachine = ({ start, stop, position, isRunning, prize, slotMachineMini }) => {\n  let playWinningInfo = null;\n  if (prize > 0) {\n    playWinningInfo = (\n      <>\n        <Badge color=\"info\">{`${prize} USD`}</Badge>\n        <PlayWinningSound />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Card className=\"main-card text-center\">\n            <CardHeader>\n              <CardTitle tag=\"h4\">Slot Machine</CardTitle>\n            </CardHeader>\n            <CardBody className=\"card-border\">\n              <CardGroup className={`wheel-container`}>\n                <Wheel position={position.w1} slotMachineMini={slotMachineMini} />\n                <Wheel position={position.w2} slotMachineMini={slotMachineMini} />\n                <Wheel position={position.w3} slotMachineMini={slotMachineMini} />\n              </CardGroup>\n            </CardBody>\n            <CardFooter>\n              {playWinningInfo}\n              <br />\n              <Button color=\"success\" disabled={isRunning} onClick={() => start()}>\n                <i className=\"tim-icons icon-triangle-right-17\" /> Start\n              </Button>\n              <Button color=\"primary\" disabled={!isRunning} onClick={() => stop()}>\n                <i className=\"tim-icons icon-simple-remove\" /> Stop\n              </Button>\n            </CardFooter>\n          </Card>\n        </Row>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  position: state.allReducer.position,\n  isRunning: state.allReducer.isRunning,\n  prize: state.allReducer.prize,\n  slotMachineMini: state.allReducer.slotMachineMini\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actionCreators, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SlotMachine);\n","import Exercise from \"views/Exercise.jsx\";\nimport SlotMachine from \"views/SlotMachine.jsx\";\n\nconst routes = [\n  {\n    path: \"/slot-machine\",\n    name: \"Game\",\n    icon: \"tim-icons icon-user-run\",\n    component: SlotMachine,\n    layout: \"/main\"\n  },\n  {\n    path: \"/exercise\",\n    name: \"Exercise\",\n    icon: \"tim-icons icon-paper\",\n    component: Exercise,\n    layout: \"/main\"\n  }\n];\n\nexport default routes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { createBrowserHistory } from \"history\";\nimport configureStore from \"./store/ConfigureStore\";\nimport MainLayout from \"layouts/Main/Main.jsx\";\n\nimport \"assets/css/nucleo-icons.css\";\nimport \"assets/scss/slot-machine.scss?v=1.0.0\";\nimport \"assets/demo/demo.css\";\n\n// Create browser history to use in the Redux store\nconst baseUrl = process.env.PUBLIC_URL + \"/\";\n//PUBLIC_URL\nconst history = createBrowserHistory({ basename: baseUrl });\n\n// Get the application-wide store instance, prepopulating with state from the server where available.\nconst initialState = window.initialReduxState;\nconst store = configureStore(history, initialState);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <Router>\n        <Switch>\n          <Route path=\"/main\" render={props => <MainLayout {...props} />} />\n          <Redirect from=\"/\" to=\"/main/slot-machine\" />\n        </Switch>\n      </Router>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}